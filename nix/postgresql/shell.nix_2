let
  pkgs =
    import (
      fetchTarball {
        name = "nixos-23.05_2023-06-30";
        url = "https://github.com/NixOS/nixpkgs/archive/b72aa95f7f096382bff3aea5f8fde645bca07422.tar.gz";
        sha256 = "1ndnsfzff0jdxvjnjnrdm74x8xq2c221hfr7swdnxm7pkmi5w9q5";
      }
    )
    {};
in
  pkgs.mkShell {
    packages = [
      pkgs.bashInteractive
      (
        pkgs.postgresql.withPackages (
          postgresqlPackages: [
            postgresqlPackages.pgtap
          ]
        )
      )
    ];

    env.PGDATA = "${toString ./.pgdata}";

    shellHook = ''
      set -o errexit -o noclobber -o nounset

      # Remove traces of running server when exiting this shell hook
      cleanup() {
        pg_ctl stop
        rm --force --recursive "$PGDATA"
      }
      trap cleanup EXIT

      # Create database cluster
      initdb --auth-local=trust --auth-host=trust

      # Start server
      pg_ctl --log="$PGDATA/db.log" --options="-c unix_socket_directories='$PGDATA'" start

      # Create test database
      db_name=test
      createdb "$db_name" --host="$PGDATA"

      # Enable pgTAP
      psql --command="CREATE EXTENSION pgtap" --dbname="$db_name" --host="$PGDATA"

      # Connect to database
      psql --dbname="$db_name" --host="$PGDATA"

      # Return from Bash after exiting psql
      exit
    '';
  }
